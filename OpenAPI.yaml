openapi: "3.0.0"
info:
  title: Weekly Planning API
  version: v1
paths:
  /accounts:
    post:
      tags:
        - Accounts
      summary: Create an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: 
                - username
                - name
                - password
              properties:
                username:
                  type: string
                name:
                  type: string
                password:
                  type: string
                  format: password
            example:
              username: username
              name: name
              password: a-password
      responses:
        201:
          description: Account created.
        420:
          description: Account password too chill.
  /accounts/{accountId}:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
        - Accounts
      summary: Delete an account.
      responses:
        204:
          description: Account deleted.
  /accounts/{accountId}/login:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Accounts
      summary: Login to an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
              example:
                username: username
                password: a-password
      responses:
        201:
          description: Successful login
  /accounts/{accountId}/logout:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Accounts
      summary: Logout of an account.
      responses:
        205:
          description: Successful logout
  /taskLists:
    get:
      tags:
        - Task Lists
      summary: Get task lists.
      responses:
        200:
          description: OK
          content:
          application/json:
            $ref: '#/components/schemas/TaskLists'
    post:
      tags:
        - Task Lists
      summary: Add task list.
      requestBody:
        required: true
        content:
          application/json:
            $ref: '#/components/schemas/TaskList'
      responses:
        201:
          description: Task list created.
  /taskLists/{taskListId}:
  /tasks:
  /tasks/{taskId}:
  /events:
  /events/{eventId}:
  /notes:
components:
  schemas:
    TaskList:
      type: object
      properties:
        listId:
          type: string
          readOnly: true
        title:
          type: string
        tasks:
          type: array
          items:
            - type: string
        completed:
          type: string
          format: date-time
          nullable: true
    TaskLists:
      type: array
        items:
          $ref: '#/components/schemas/TaskList'
    Task:
      type: object
      properties:
        taskId:
          type: string
          readOnly: true
        title:
          type: string
        description:
          type: string
        duration:
          type: integer
        complete:
          type: string
          format: date-time
          nullable: true
    Tasks:
      type: array
      items:
        $ref: '#/components/schemas/Task'
    Event: 
      type: object
      properties:
    Events:
